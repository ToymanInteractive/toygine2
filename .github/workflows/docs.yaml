name: Generate Doxygen Docs

on:
  push:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          submodules: recursive

      - name: Install Doxygen
        run: |
          sudo apt-get update -y
          sudo apt-get install -y graphviz
          pip3 install coverxygen sphinx breathe sphinx-rtd-theme
          curl -L https://github.com/doxygen/doxygen/releases/download/Release_1_12_0/doxygen-1.12.0.linux.bin.tar.gz -o doxygen.tar.gz || { echo "Failed to download Doxygen"; exit 1; }
          tar -xzf doxygen.tar.gz || { echo "Failed to extract Doxygen"; exit 1; }
          cd doxygen-*
          sudo cp bin/doxygen /usr/local/bin/ || { echo "Failed to install Doxygen"; exit 1; }
          cd ..
          rm -rf doxygen-* doxygen.tar.gz
          doxygen --version

      - name: Generate Docs
        run: |
          cmake -DTOYGINE_BUILD_DOCS=ON -DTOYGINE_BUILD_TESTS=OFF --preset linux-ninja-debug
          cmake --build --preset linux-ninja-debug --target docs

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4.0.0
        if: ${{ github.ref_name == 'main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html

      - name: Collect docs coverage
        run: |
          python3 -m coverxygen --xml-dir ./docs/xml --src-dir . --output ./docs/xml/doc.lcov --format lcov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          files: ./docs/xml/doc.lcov
          flags: documentation
          token: ${{ secrets.CODECOV_TOKEN }}
